apply plugin: 'application'

repositories {
    mavenCentral()
}

dependencies {
   compile group: 'org.json', name: 'json', version: '20200518'
}

//define main class
mainClassName = 'Concentration'

task runTask1(type: JavaExec) {
  group 'server'
  description 'Creates Server socket waits for messages'
  

  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.Server'
  standardInput = System.in
  
  // run with arguments e.g.: gradle runServer -Pport=9099 -q --console=plain
  // NEW: can now run like ---> gradle runTask1 -Pport=8888 -q --console=plain
  if (project.hasProperty('port')) {
    args(project.getProperty('port'));
  }
  args 8000
}

task runTask2(type: JavaExec) {
  group 'server'
  description 'Creates Server socket waits for messages'
  
  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.ThreadedServer'
  standardInput = System.in
  
  // run with arguments e.g.: gradle runThreadedServer -Pport=9099 -q --console=plain
  // NEW: can now run like ---> gradle runTask2 -Pport=8888 -q --console=plain

  if (project.hasProperty('port')) {
    args(project.getProperty('port'));
  }

  args 8000
}

task runTask3(type: JavaExec) {
  group 'server'
  description 'Creates Server socket waits for messages'
  
  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.ThreadPoolServer'
  standardInput = System.in
  
  // run with arguments e.g.: gradle runThreadPoolServer -Pport=9099 -q --console=plain
  // NEW: can now run like ---> gradle runTask3 -Pport=8888 -q --console=plain
  if (project.hasProperty('port')) {
    args(project.getProperty('port'));
  }
  args 8000
}

task runClient(type: JavaExec) {
  group 'client'
  description 'Creates client socket sends a message to the server'
  
  
  
  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in

  main = 'taskone.Client'
  standardInput = System.in
  
  // run with arguments e.g.: gradle runClient -Phost=localhost -Pport=9099 -q --console=plain
  // NEW: can now run like ---> gradle runClient -Phost=localhost -Pport=8888 -q --console=plain


  if (project.hasProperty("host") && project.hasProperty('port')) {
    args(project.getProperty('host'), project.getProperty('port'));
  }

  args "localhost"
  args 8000
  
}

